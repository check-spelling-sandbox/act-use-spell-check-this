name: check act against spell-check-this

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * *"

jobs:
  act:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          repository: check-spelling/spell-check-this
          ref: prerelease

      - name: Get act
        env:
          act_repo: nektos/act
          act_variant: act_Linux_x86_64.tar.gz
          GH_TOKEN: ${{ github.token }}
        run: |
          set -x
          act_bin_dir=$(mktemp -d)
          cd $(mktemp -d)
          latest_act_version=$(gh release list -R $act_repo --json 'isLatest,name' -q '.[]|select(.isLatest==true)|.name')
          gh release download -R $act_repo $latest_act_version -p $act_variant
          tar zxf $act_variant
          mv act $act_bin_dir
          echo "$act_bin_dir" >> "$GITHUB_PATH"
      - name: configure act
        run: |
          cat > ~/.actrc <<EOF
          -P ubuntu-latest=catthehacker/ubuntu:act-latest
          -P ubuntu-22.04=catthehacker/ubuntu:act-22.04
          -P ubuntu-20.04=catthehacker/ubuntu:act-20.04
          -P ubuntu-18.04=catthehacker/ubuntu:act-18.04
          -P ubuntu-16.04=catthehacker/ubuntu:act-16.04
          -P self-hosted=catthehacker/ubuntu:act-latest
          --use-new-action-cache
          EOF
      - name: act --bug-report
        run: |
          (
          echo '# act --bug-report'
          echo
          echo '```'
          act --bug-report
          echo '```'
          echo
          ) >> "$GITHUB_STEP_SUMMARY"
      - name: list workflows
        run: |
          act -l
      - name: run act
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          (
            act -s GH_TOKEN="$GH_TOKEN" 2>&1
          ) | tee /tmp/act.run.log
      - name: upload logs
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: logs
          path: /tmp/act.run.log
          retention-days: 7
